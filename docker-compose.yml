version: "3.8"

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

x-restart-policy:
  restart: unless-stopped

services:
  caddy:
    <<: *logging

    image: "docker.io/caddy:2.7.6"

    ports:
    - "80:80"
    - "443:443"

    volumes:
    - ./services/caddy/Caddyfile:/etc/caddy/Caddyfile
    - caddy_data:/data
    - caddy_config:/config

    networks:
    - infra-metrics

  watchtower:
    <<: *logging

    image: "docker.io/containrrr/watchtower"

    env_file:
    - .env

    environment:
      WATCHTOWER_LABEL_ENABLE: "true"
      WATCHTOWER_POLL_INTERVAL: 30

    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    <<: *logging

    image: "docker.io/postgres:16-alpine"

    volumes:
    - postgres_data:/var/lib/postgresql/data

    env_file:
    - .env

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 2s
      timeout: 1s
      retries: 5

    networks:
    - database-access

  grafana:
    <<: *logging

    image: "docker.io/grafana/grafana:10.3.4"

    env_file: .env

    environment:
      GF_SERVER_ROOT_URL: "https://grafana.xithrius.cloud"

    user: "0"

    volumes:
    - ./data/grafana:/var/lib/grafana
    - ./services/grafana/provisioning:/etc/grafana/provisioning
    - ./services/grafana/dashboards:/var/lib/grafana/dashboards

    networks:
    - infra-metrics

  prometheus:
    <<: *logging

    image: "docker.io/prom/prometheus:v2.50.1"

    command:
    - "--config.file=/etc/prometheus.yml"

    user: "0"

    ports:
    - "127.0.0.1:9090:9090"

    volumes:
    - ./services/prometheus/prometheus.yml:/etc/prometheus.yml
    - ./data/prometheus:/prometheus

    networks:
    - infra-metrics

  node_exporter:
    <<: *logging

    image: "quay.io/prometheus/node-exporter:v1.7.0"

    command:
    - "--path.procfs=/host/proc"
    - "--path.rootfs=/host"
    - "--path.sysfs=/host/sys"
    - "--collector.systemd"
    - "--collector.processes"
    - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"

    pid: host

    volumes:
    - /:/host:ro,rslave

    networks:
    - infra-metrics

  cadvisor:
    <<: *logging

    image: "gcr.io/cadvisor/cadvisor:v0.47.2"

    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro

    networks:
    - infra-metrics

  loki:
    <<: *logging

    image: "docker.io/grafana/loki:2.9.5"

    command: "-config.file=/etc/loki/local-config.yaml"

    ports:
    - "127.0.0.1:3100:3100"

    networks:
    - infra-metrics

  tempo:
    <<: *logging

    image: "docker.io/grafana/tempo:2.4.0"

    command:
    - "--target=all"
    - "--storage.trace.backend=local"
    - "--storage.trace.local.path=/var/tempo"
    - "--auth.enabled=false"

    ports:
    - "127.0.0.1:4317:4317"
    - "127.0.0.1:4318:4318"

    networks:
    - infra-metrics

networks:
  database-access:
    name: database-access
    external: true
  infra-metrics:
    name: infra-metrics
    external: true

volumes:
  postgres_data:
    external: true
  caddy_data:
    external: true
  caddy_config:
